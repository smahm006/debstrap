#!/usr/bin/env bash

# Path to playbook
case "$(hostname)" in
  sm-laptop)
    MACHINE_TYPE="laptop"
    ;;
  sm-desktop)
    MACHINE_TYPE="desktop"
    ;;
  sm-server)
    MACHINE_TYPE="server"
    ;;
  *)
    MACHINE_TYPE="work"
    ;;
esac
SCRIPT_DIR="$(dirname "$(readlink -f "${BASH_SOURCE[0]}")")"
ANSIBLE_DIR="$(readlink -f ${SCRIPT_DIR}/../../../../../..)"

debstrap() {
    local tags=()
    local skip_tags=()
    local mode="tags"
    local current_part=""

    # iterate over arguments
    for arg in "$@"; do
        if [[ "$arg" == "--skip" ]]; then
            # save any accumulated part before switching modes
            if [[ -n "$current_part" ]]; then
                if [[ "$mode" == "tags" ]]; then
                    tags+=("$current_part")
                else
                    skip_tags+=("$current_part")
                fi
                current_part=""
            fi
            mode="skip"
            continue
        fi

        # Check if this argument contains a comma
        if [[ "$arg" == *,* ]]; then
            # save any accumulated part with the first part of this arg
            IFS=',' read -ra parts <<< "$arg"

            # first part gets joined with current_part
            local first="${parts[0]}"
            first="${first#"${first%%[![:space:]]*}"}"
            first="${first%"${first##*[![:space:]]}"}"

            if [[ -n "$current_part" ]]; then
                current_part="${current_part}_${first}"
            else
                current_part="$first"
            fi

            # save the accumulated part
            if [[ -n "$current_part" ]]; then
                if [[ "$mode" == "tags" ]]; then
                    tags+=("$current_part")
                else
                    skip_tags+=("$current_part")
                fi
                current_part=""
            fi

            # process remaining comma-separated parts
            for ((i=1; i<${#parts[@]}; i++)); do
                local part="${parts[i]}"
                part="${part#"${part%%[![:space:]]*}"}"
                part="${part%"${part##*[![:space:]]}"}"
                part="${part// /_}"

                if [[ -z "$part" ]]; then
                    continue
                fi

                current_part="$part"
            done
        else
            # no comma, accumulate with underscore
            arg="${arg#"${arg%%[![:space:]]*}"}"
            arg="${arg%"${arg##*[![:space:]]}"}"

            if [[ -n "$current_part" ]]; then
                current_part="${current_part}_${arg}"
            else
                current_part="$arg"
            fi
        fi
    done

    # don't forget the last accumulated part
    if [[ -n "$current_part" ]]; then
        if [[ "$mode" == "tags" ]]; then
            tags+=("$current_part")
        else
            skip_tags+=("$current_part")
        fi
    fi

    # change directory to ansible dir
    cd ${ANSIBLE_DIR}

    # build command
    local cmd="ansible-playbook -K playbooks/${MACHINE_TYPE}.yml"
    [[ ${#tags[@]} -gt 0 ]] && cmd+=" --tags $(IFS=,; echo "${tags[*]}")"
    [[ ${#skip_tags[@]} -gt 0 ]] && cmd+=" --skip-tags $(IFS=,; echo "${skip_tags[*]}")"

    pwd; echo "Running: $cmd"
    eval "$cmd"
}


debstrap "$@"
