---
- name: Ensure GnuPG config directory exists
  ansible.builtin.file:
    path: "{{ user_home }}/.config/gnupg"
    state: directory
    mode: "0700"

- name: Ensure correct permissions on GnuPG files
  ansible.builtin.find:
    paths: "{{ user_home }}/.config/gnupg"
    recurse: true
  register: gpg_files

- name: Fix permissions for GnuPG files
  ansible.builtin.file:
    path: "{{ item.path }}"
    mode: "{{ '0700' if item.isdir else '0600' }}"
  loop: "{{ gpg_files.files }}"
  loop_control:
    label: "{{ item.path }}"

- name: Import Yubikey public GPG key
  ansible.builtin.command:
    cmd: "gpg --import {{ role_path }}/files/yubikey_public.asc"
  args:
    creates: "{{ xdg_config_home }}/gnupg/pubring.kbx"
  environment:
    GNUPGHOME: "{{ xdg_config_home }}//gnupg"
  register: gpg_import
  changed_when: "'imported' in gpg_import.stdout or 'unchanged' in gpg_import.stdout"

- name: Refresh GPG smartcard keys
  ansible.builtin.command:
    cmd: "gpg --card-status"
  environment:
    GNUPGHOME: "{{ xdg_config_home }}/gnupg"
  register: gpg_card
  changed_when: false
